# Generated by Django 5.0.6 on 2025-06-10 07:06

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('device_id', models.IntegerField(unique=True, verbose_name='设备ID')),
                ('name', models.CharField(default='Unnamed Device', max_length=100, verbose_name='设备名称')),
                ('depot', models.CharField(default='Unknown Depot', max_length=100, verbose_name='车间')),
                ('line', models.CharField(default='Unknown Line', max_length=100, verbose_name='线路')),
                ('ip_address', models.GenericIPAddressField(unique=True, verbose_name='IP地址')),
                ('x_coordinate', models.FloatField(default=0.0, verbose_name='X坐标')),
                ('y_coordinate', models.FloatField(default=0.0, verbose_name='Y坐标')),
                ('direction1_neighbor_id', models.IntegerField(blank=True, db_index=True, default=0, null=True, verbose_name='一方向邻站ID')),
                ('direction1_neighbor_direction', models.IntegerField(blank=True, db_index=True, default=2, null=True, verbose_name='一方向邻站方向')),
                ('direction2_neighbor_id', models.IntegerField(blank=True, db_index=True, default=0, null=True, verbose_name='二方向邻站ID')),
                ('direction2_neighbor_direction', models.IntegerField(blank=True, db_index=True, default=1, null=True, verbose_name='二方向邻站方向')),
                ('remark', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('alarm_filters', models.JSONField(blank=True, default=list, verbose_name='过滤告警码')),
            ],
            options={
                'verbose_name': '设备信息',
                'verbose_name_plural': '设备信息',
                'ordering': ['device_id'],
            },
        ),
        migrations.CreateModel(
            name='UploadedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='uploads/', verbose_name='文件')),
                ('name', models.CharField(max_length=255, verbose_name='备注名称')),
                ('upload_time', models.DateTimeField(auto_now_add=True, verbose_name='上传时间')),
            ],
            options={
                'verbose_name': '上传的文件',
                'verbose_name_plural': '文件上传',
                'ordering': ['-upload_time'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('depots', models.JSONField(blank=True, default=list, verbose_name='可管理车间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AnalogData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('voltage_1', models.FloatField(verbose_name='电压1(V)')),
                ('current_1', models.FloatField(verbose_name='电流1(A)')),
                ('voltage_2', models.FloatField(verbose_name='电压2(V)')),
                ('current_2', models.FloatField(verbose_name='电流2(A)')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.device', to_field='device_id', verbose_name='设备')),
            ],
            options={
                'verbose_name': '电压电流数据',
                'verbose_name_plural': '电压电流数据',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='AlarmData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('alarm_code', models.IntegerField(verbose_name='告警码')),
                ('timestamp_start', models.DateTimeField(verbose_name='告警开始时间')),
                ('timestamp_end', models.DateTimeField(blank=True, null=True, verbose_name='告警结束时间')),
                ('is_confirmed', models.BooleanField(default=False, verbose_name='确认状态')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.device', to_field='device_id', verbose_name='设备')),
            ],
            options={
                'verbose_name': '历史告警记录',
                'verbose_name_plural': '历史告警',
                'ordering': ['-timestamp_start'],
            },
        ),
        migrations.CreateModel(
            name='RelayAction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('relay', models.CharField(max_length=100, verbose_name='继电器')),
                ('action', models.CharField(max_length=100, verbose_name='动作')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='时间')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.device', to_field='device_id', verbose_name='设备')),
            ],
            options={
                'verbose_name': '继电器动作记录',
                'verbose_name_plural': '继电器动作',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SwitchData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('switch_status', models.BinaryField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.device', to_field='device_id', verbose_name='设备')),
            ],
            options={
                'verbose_name': '开关量数据记录',
                'verbose_name_plural': '开关量数据',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='UserOperation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('function_code', models.CharField(max_length=100, verbose_name='操作码')),
                ('operation', models.CharField(max_length=100, verbose_name='操作名称')),
                ('username', models.CharField(blank=True, max_length=100, null=True, verbose_name='用户名')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='操作时间')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.device', to_field='device_id', verbose_name='设备')),
            ],
            options={
                'verbose_name': '用户操作记录',
                'verbose_name_plural': '用户操作',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='AlarmActive',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('alarm_code', models.IntegerField(verbose_name='告警码')),
                ('timestamp_start', models.DateTimeField(auto_now_add=True, verbose_name='告警开始时间')),
                ('is_confirmed', models.BooleanField(default=False, verbose_name='确认状态')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.device', to_field='device_id', verbose_name='设备')),
            ],
            options={
                'verbose_name': '当前告警信息',
                'verbose_name_plural': '当前告警',
                'ordering': ['-timestamp_start'],
                'unique_together': {('device', 'alarm_code')},
            },
        ),
    ]
